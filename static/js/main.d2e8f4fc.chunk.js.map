{"version":3,"sources":["Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toLocaleTimeString","timerId","setInterval","this","date","setState","console","log","prevProps","props","name","clearInterval","Component","App","isClockVisible","clockName","hideClock","showClock","randomName","newName","Math","floor","random","className","type","onClick","disabled","ReactDOM","render","document","getElementById"],"mappings":"8LAUMA,G,kNACJC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sB,EAGnBC,QAAwBC,aAAY,cAAU,G,uDAE9C,WAAqB,IAAD,OAClBC,KAAKF,QAAUC,aAAY,WACzB,IAAME,EAAa,IAAIL,KAEvB,EAAKM,SAAS,CACZP,KAAMM,EAAKJ,uBAGbM,QAAQC,IAAI,EAAKV,MAAMC,QACtB,O,gCAGL,SAAmBU,GACbL,KAAKM,MAAMC,OAASF,EAAUE,MAEhCJ,QAAQC,IAAR,qCAA0CC,EAAUE,KAApD,eAA+DP,KAAKM,MAAMC,S,kCAI9E,WACEC,cAAcR,KAAKF,W,oBAGrB,WACE,OACEE,KAAKN,MAAMC,S,GAhCGc,cAqCLhB,I,OCpCTiB,E,4MACJhB,MAAQ,CACNiB,gBAAgB,EAChBC,UAAW,G,EAGbC,UAAY,WACV,EAAKX,SAAS,CACZS,gBAAgB,K,EAIpBG,UAAY,WACV,EAAKZ,SAAS,CACZS,gBAAgB,K,EAIpBI,WAAa,WACX,IAAMC,EAAUC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,EAElD,EAAKjB,SAAS,CACZU,UAAWI,K,4CAIf,WACE,MAAsChB,KAAKN,MAAnCiB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,sBAAKQ,UAAU,MAAf,UACE,6CACA,sBAAK,UAAQ,OAAb,0BAEG,IACAT,GAAkB,cAAC,EAAD,CAAOJ,KAAMK,OAElC,wBACES,KAAK,SACLC,QAAStB,KAAKc,UACdS,SAAUZ,EAHZ,wBAQA,wBACEU,KAAK,SACLC,QAAStB,KAAKa,UACdU,UAAWZ,EAHb,wBAQA,wBACEU,KAAK,SACLC,QAAStB,KAAKe,WACdQ,UAAWZ,EAHb,oC,GArDUF,aAiEHC,ICzEfc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d2e8f4fc.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: number;\n};\n\ntype State = {\n  time: string | null;\n};\n\nclass Clock extends Component<Props, State> {\n  state = {\n    time: new Date().toLocaleTimeString(),\n  };\n\n  timerId: NodeJS.Timer = setInterval(() => {}, 0);\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      const date: Date = new Date();\n\n      this.setState({\n        time: date.toLocaleTimeString(),\n      });\n      // eslint-disable-next-line no-console\n      console.log(this.state.time);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    if (this.props.name !== prevProps.name) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      this.state.time\n    );\n  }\n}\n\nexport default Clock;\n","import { Component } from 'react';\nimport './App.scss';\nimport Clock from './Clock/Clock';\n\ntype State = {\n  isClockVisible?: boolean;\n  clockName?: number;\n};\n\ntype Props = {};\n\nclass App extends Component<Props, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  hideClock = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  };\n\n  showClock = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  };\n\n  randomName = () => {\n    const newName = Math.floor(Math.random() * 100) + 1;\n\n    this.setState({\n      clockName: newName,\n    });\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <div data-cy=\"time\">\n          Current time:\n          {' '}\n          {isClockVisible && <Clock name={clockName} />}\n        </div>\n        <button\n          type=\"button\"\n          onClick={this.showClock}\n          disabled={isClockVisible}\n        >\n          Show Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.hideClock}\n          disabled={!isClockVisible}\n        >\n          Hide Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.randomName}\n          disabled={!isClockVisible}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}